type Query {
  game(id: ID!): Game
  player(id: ID!): Player
  boards: [Board]
  players: [Player]
}

type Board {
  id: ID!
  player: Player
  status: String
  board: [[Int]]
}

type Mutation {
  createGame(input: CreateGameInput): Game
  joinGame(input: JoinGameInput): Game
  shot(input: ShotInput): Int
}

type Subscription {
  newGameAdded: Game
}

type Player {
  id: ID!
  name: String
}

type Game {
  id: ID!
  createdAt: String
  startTime: String
  endTime: String
  boardOwner: Board
  boardGuest: Board
}

input CreateGameInput {
  playerId : String
}

input JoinGameInput {
  playerId: String
  gameId: String
}

input ShotInput {
  boardId: String
  x: Int
  y: Int
}